
.settings {
    margin: 2rem;
    display: flex;
    max-width: 30rem;
    flex-direction: column;

    &__header {
        display: flex;
        align-items: center;
    }

    h2 {
        margin: 0;
    }
}

.row {
    display: flex;
    flex-direction: row;
    align-items: baseline;
}

.msg {
    font-size: 1rem;
    margin: 0;
    transition: opacity 2s;
    opacity: 0;
    flex-shrink: 999;
    min-width: 0;
    text-align: right;
    flex-basis: 0;
    flex-grow: 999;

    &--visible {
        transition: opacity 0s;
        opacity: 1;
    }
}

.grower {
    flex-grow: 999;
}

.chart {
    position: relative;
    width: calc(100vw - 1rem);
    height: calc(100vh - 10rem);
    margin: 0 0 1rem 0;
    overflow: hidden;
    flex-shrink: 0;
}

@media screen and (orientation:landscape) {
    .chart {
        height: calc(100vh - 8rem);
    }
}

.inline {
    margin: 0 1rem;
    width: 8rem;
}

.container {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}
  
.is-mobile .toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
}
  
.app-name {
    margin: 0 16px 0 8px;
    font-size: 1.1rem;
    cursor: pointer;
}

.page-title {
    font-size: 1rem;
    flex-shrink: 999;
    overflow-x: hidden;
    cursor: pointer;
    text-overflow: ellipsis;
}
  
.example-sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
}
  
.example-is-mobile .example-sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
}
  
canvas {
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
}

.portrait-notice {
    text-align: center;
}